name: Pull Request

on:
  pull_request:
    branches: ['master']
  workflow_dispatch:

jobs:
  lint-and-build:
    strategy:
      matrix:
        node: [18, 20]
      fail-fast: true
    runs-on: ubuntu-latest
    name: Lint & Build on Node v${{ matrix.node }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - run: npm ci
      - name: Install Dependencies
        run: npm ci
      - name: Run Linting
        run: npx nx affected --target=lint --base=remotes/origin/master --head=HEAD
      - name: Build Packages
        run: npx nx affected --target=build --base=remotes/origin/master --head=HEAD
      # - name: Build Apps
      #   run: npm run build-apps
  unit-test:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: Run Test
        run: npx nx affected --target=test --base=remotes/origin/master --head=HEAD
  mutation-tests:
    strategy:
      matrix:
        mutation-package:
          - core
          - utils
          - events
          - personalize
    runs-on: ubuntu-latest
    name: Run mutation tests for ${{ matrix.mutation-package }} package
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - run: npm ci
      - name: Run Mutation Tests
        run: npx stryker run ./packages/${{ matrix.mutation-package }}/stryker.conf.js
  events-e2e-tests:
    name: Run Events E2E
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
      - run: npm ci
      - name: Run E2E Tests
        run: npx nx run engage-e2e:engage-next-events
      - name: Generate Events E2E Test Report
        if: always()
        run: npm run generate-e2e-report
      - name: Upload Events E2E Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-report
          path: apps/engage-e2e/cypress/results/
  personalize-e2e-tests:
    name: Run Personalize E2E
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
      - run: npm ci
      - name: Run E2E Tests
        run: npx nx run engage-e2e:engage-next-personalize
      - name: Generate Personalize E2E Test Report
        if: always()
        run: npm run generate-e2e-report
      - name: Upload Personalize E2E Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-report
          path: apps/engage-e2e/cypress/results/
  add-label:
    name: Create a label based on last commit
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Try to add the label based on the last commit message
        run: |
          commit_label=$(git show -s --format=%s | cut -d':' -f1)
          gh pr edit ${{ github.event.pull_request.number }} --add-label "$commit_label"
