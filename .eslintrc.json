{
  "extends": ["eslint:recommended", "plugin:import/recommended", "plugin:import/typescript"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": true,
    "tsconfigRootDir": "./"
  },
  "root": true,
  "ignorePatterns": ["**/*config*", "**/*.config.js", "**/*config*", "**/*.config.ts", "tools/**/*", "jest.preset.js"],
  "plugins": ["@stylistic/js", "@nx", "header", "@typescript-eslint/eslint-plugin", "eslint-plugin-tsdoc"],

  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.ts"],
      "rules": {
        "curly": ["error", "multi"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase"]
          },
          {
            "selector": "class",
            "format": ["PascalCase"]
          },
          {
            "selector": "method",
            "format": ["camelCase"]
          },
          {
            "selector": "property",
            "format": ["camelCase"]
          },
          {
            "selector": "enum",
            "format": ["PascalCase"]
          }
        ],
        "max-len": ["error", { "code": 120 }],
        "no-empty-function": ["error", { "allow": ["constructors"] }],
        "tsdoc/syntax": "error",
        "sort-keys": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "header/header": [
          2,
          "line",
          [
            " © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S."
          ]
        ],
        "indent": ["error", 2, { "SwitchCase": 1, "outerIIFEBody": 4 }],
        "import/no-default-export": "error",
        "import/no-unresolved": "off",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": ["static-field", "instance-field", "static-method", "instance-method"]
          }
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "error",
          {
            "before": true,
            "after": true,
            "overrides": { "colon": { "before": false, "after": true } }
          }
        ],
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "fixStyle": "separate-type-imports"
          }
        ],
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/no-import-type-side-effects": "error",
        "@stylistic/js/comma-dangle": ["error", "never"],
        "sort-imports": "error"
      }
    },
    {
      "files": ["*spec.ts"],
      "rules": {
        "header/header": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase"]
          },
          {
            "selector": "class",
            "format": ["PascalCase"]
          },
          {
            "selector": "method",
            "format": ["camelCase"]
          },
          {
            "selector": "property",
            "format": ["camelCase"]
          },
          {
            "selector": "enum",
            "format": ["PascalCase"]
          }
        ]
      }
    }
  ]
}
